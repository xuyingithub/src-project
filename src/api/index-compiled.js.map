{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["// 引入axios\nimport axios from 'axios';\nimport { Message } from 'element-ui';\n\nlet cancel;\nconst promiseArr = {};\nconst CancelToken = axios.CancelToken;\n// 请求拦截器\naxios.interceptors.request.use((config) => {\n  // 发起请求时，取消掉当前正在进行的相同请求\n  if (promiseArr[config.url]) {\n    promiseArr[config.url]('操作取消');\n    promiseArr[config.url] = cancel;\n  } else {\n    promiseArr[config.url] = cancel;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// 响应拦截器即异常处理\naxios.interceptors.response.use(response => response, (error) => {\n  if (error && error.response) {\n    switch (error.response.status) {\n      case 400:\n        error.message = '错误请求';\n        break;\n      case 401:\n        error.message = '未授权，请重新登录';\n        break;\n      case 403:\n        error.message = '拒绝访问';\n        break;\n      case 404:\n        error.message = '请求错误,未找到该资源';\n        break;\n      case 405:\n        error.message = '请求方法未允许';\n        break;\n      case 408:\n        error.message = '请求超时';\n        break;\n      case 500:\n        error.message = '服务器端出错';\n        break;\n      case 501:\n        error.message = '网络未实现';\n        break;\n      case 502:\n        error.message = '网络错误';\n        break;\n      case 503:\n        error.message = '服务不可用';\n        break;\n      case 504:\n        error.message = '网络超时';\n        break;\n      case 505:\n        error.message = 'http版本不支持该请求';\n        break;\n      default:\n        error.message = `连接错误${error.response.status}`;\n    }\n  } else {\n    error.message = '连接到服务器失败';\n  }\n  Message({\n    message: error.message,\n    type: 'error',\n  });\n  return Promise.resolve(error.response);\n});\n\naxios.defaults.baseURL = '/api';\n// 设置默认请求头\naxios.defaults.headers = {\n  'X-Requested-With': 'XMLHttpRequest',\n};\naxios.defaults.timeout = 10000;\n\nexport default {\n  // get请求\n  get(url, param) {\n    return new Promise((resolve) => {\n      axios({\n        method: 'get',\n        url,\n        params: param,\n        cancelToken: new CancelToken((c) => {\n          cancel = c;\n        }),\n      }).then((res) => {\n        resolve(res);\n      });\n    });\n  },\n  // post请求\n  post(url, param) {\n    return new Promise((resolve) => {\n      axios({\n        method: 'post',\n        url,\n        data: param,\n        cancelToken: new CancelToken((c) => {\n          cancel = c;\n        }),\n      }).then((res) => {\n        resolve(res);\n      });\n    });\n  },\n};\n"]}